import { ConnectButton } from "@rainbow-me/rainbowkit";
import type { NextPage } from "next";
import Head from "next/head";
import styles from "../styles/Home.module.css";
import axios from "axios";
import { type WalletClient, usePublicClient, useWalletClient } from "wagmi";
import { EIP712Signer, Provider, types, utils } from "zksync-web3";
import React, { useState } from "react";
import { providers } from "ethers";
import { GoogleLogin, googleLogout, useGoogleLogin } from "@react-oauth/google";

const Home: NextPage = () => {
  const [account, setAccount] = useState<string>("");
  const [socialId, setSocialId] = useState<string>("");
  const [socialType, setSocialType] = useState<string>("");
  const { data } = useWalletClient();
  const publicClient = usePublicClient();
  const signer = useEthersSigner({
    chainId: publicClient.chain.id,
  });
  const setLimit = async () => {
    const transaction = await axios.post(`/api/limit`, {
      socialId: socialId,
      socialType: socialType,
    });
  };

  const googleLogin = useGoogleLogin({
    onSuccess: async (tokenResponse) => {
      console.log(tokenResponse);
      // fetching userinfo can be done on the client or the server
      const userInfo = await axios.get(
        "https://www.googleapis.com/oauth2/v3/userinfo",
        {
          headers: { Authorization: `Bearer ${tokenResponse.access_token}` },
        }
      );
      const aa = await axios.post("/api/aa", {
        socialId: userInfo.data.sub,
        socialType: "1",
      });
      if (aa.data) {
        setAccount(aa.data.data.account);
        setSocialId(aa.data.data.socialId);
        setSocialType(aa.data.data.socialType);
      }
    },
  });
  return (
    <div className={styles.container}>
      <Head>
        <title>RainbowKit App</title>
        <meta
          content="Generated by @rainbow-me/create-rainbowkit"
          name="description"
        />
        <link href="/favicon.ico" rel="icon" />
      </Head>

      <main className={styles.main}>
        <ConnectButton />
        <button onClick={setLimit}>Set Limit</button>
        <button
          onClick={() => {
            googleLogin();
          }}
        >
          Login via google
        </button>
        <span className="">{account}</span>
      </main>

      <footer className={styles.footer}>
        <a href="https://rainbow.me" rel="noopener noreferrer" target="_blank">
          Made with ‚ù§Ô∏è by your frens at üåà
        </a>
      </footer>
    </div>
  );
};

export function walletClientToSigner(walletClient: WalletClient) {
  const { account, chain, transport } = walletClient;
  const network = {
    chainId: chain.id,
    name: chain.name,
    ensAddress: chain.contracts?.ensRegistry?.address,
  };
  const provider = new providers.Web3Provider(transport, network);
  const signer = provider.getSigner(account.address);
  return signer;
}

/** Hook to convert a viem Wallet Client to an ethers.js Signer. */
export function useEthersSigner({ chainId }: { chainId?: number } = {}) {
  const { data: walletClient } = useWalletClient({ chainId });
  return React.useMemo(
    () => (walletClient ? walletClientToSigner(walletClient) : undefined),
    [walletClient]
  );
}

export default Home;
